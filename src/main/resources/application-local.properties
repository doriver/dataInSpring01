spring.application.name=data
# 데이터 적재 실습용( dataLoading브랜치 )

server.port=8091

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/data_loading?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=update
# create : 애플리케이션 실행시점에 기존 테이블들을 모두 삭제하고, 다시 생성한다.
# update : 애플리케이션 실행시점에 ‘JPA 엔티티 설계’와 ‘실제 테이블 상태’를 비교하여, 실제 테이블에서 변경된 부분만 반영  , 기존에 존재하는 컬럼의 속성(nullable, 크기, 데이터 타입 등)은 건드리지 않고, 새로운 컬럼이 추가되는 변경사항만 반영?
# validate : 엔티티 클래스와 테이블이 정상적으로 매핑되는지만 검사( 엔티티 클래스의 필드가 매핑되는 테이블에 모두 존재하기만 한다면 괜찮음 )
#테스트 서버 : update 또는 validate
#스테이징 및 운영 서버 : validate 또는 none

spring.jpa.open-in-view=true

spring.elasticsearch.uris=http://localhost:9200